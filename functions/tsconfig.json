{
  "compilerOptions": {
    /* Base Options */
    "esModuleInterop": true, // Enables interoperability between CommonJS and ES Modules
    "skipLibCheck": true, // Skip type checking of declaration files
    "target": "ES2020", // Target modern ECMAScript features
    "allowJs": true, // Allow JavaScript files to be compiled (useful during transition)
    "resolveJsonModule": true, // Include modules imported with .json extension
    "moduleDetection": "force", // Treat files as modules without needing imports/exports
    "isolatedModules": true, // Ensure files can be safely transpiled without relying on other imports

    /* Strict Type Checking */
    "strict": true, // Enable all strict type-checking options
    // "noImplicitAny": true, // (Included in strict) Raise error on expressions and declarations with an implied 'any' type.
    // "strictNullChecks": true, // (Included in strict) When type checking, take into account 'null' and 'undefined'.
    // "strictFunctionTypes": true, // (Included in strict) Enable strict checking of function types.
    // "strictBindCallApply": true, // (Included in strict) Enable strict 'bind', 'call', and 'apply' methods on functions.
    // "strictPropertyInitialization": true, // (Included in strict) Check for class properties that are declared but not set in the constructor.
    // "noImplicitThis": true, // (Included in strict) Raise error on 'this' expressions with an implied 'any' type.
    // "useUnknownInCatchVariables": true, // (Included in strict: TS 4.4+) Default catch clause variables as 'unknown' instead of 'any'.
    // "alwaysStrict": true, // (Included in strict) Parse in strict mode and emit "use strict" for each source file.

    /* Module Resolution */
    "module": "CommonJS", // Specify module code generation (Firebase Functions use CommonJS)
    "outDir": "lib", // Redirect output structure to the directory.
    "rootDir": "src", // Specify the root directory of input files.
    "baseUrl": ".", // Base directory to resolve non-absolute module names.
    "paths": {
      "*": [
        "node_modules/*",
        "src/types/*" // Optional: if you create a types directory
      ]
    },

    /* Linter Checks */
    "noUnusedLocals": true, // Report errors on unused local variables.
    "noUnusedParameters": true, // Report errors on unused parameters.
    "noImplicitReturns": true, // Report error when not all code paths in function return a value.
    "noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statement.
    "noUncheckedIndexedAccess": true, // Include 'undefined' in index signature results
    // "noImplicitOverride": true, // Ensure overriding members in derived classes are marked with an override modifier.

    /* Source Map Options */
    "sourceMap": true, // Generate corresponding '.map' file.
    "declaration": true, // Generate corresponding '.d.ts' file.
    "declarationMap": true, // Generate a sourcemap for each corresponding '.d.ts' file.

    /* Experimental Options */
    // "experimentalDecorators": true,
    // "emitDecoratorMetadata": true,

    /* Advanced Options */
    "forceConsistentCasingInFileNames": true // Disallow inconsistently-cased references to the same file.
  },
  "include": [
    "src/**/*.ts" // Include all .ts files in the src directory
  ],
  "exclude": [
    "node_modules", // Exclude node_modules
    "lib", // Exclude the output directory
    "**/*.spec.ts" // Exclude test files if they exist
  ],
  "compileOnSave": true // Compile files on save (useful for IDE integration)
} 